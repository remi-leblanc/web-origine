import { useState, useEffect, forwardRef, useImperativeHandle } from "react"
import anime from 'animejs/lib/anime.es.js'
import colors from 'tailwindcss/colors'

interface Props {
	click(): void,
}
interface Ref {
	Valid(): void,
	Error(): void,
	Unknow(): void,
}

const StartButton = forwardRef<Ref, Props>((props , ref) => {

	const [resultText, setResultText] = useState("");

	function startAnim() {
		anime.timeline({
			duration: 3000,
		})
		.add({
			targets: '.startBtn',
			color: 'rgba(0,0,0,0)',
			easing: 'easeInOutQuad',
			duration: 100
		})
		.add({
			targets: '.startBtn',
			width: '45px',
			easing: 'easeInOutQuad',
			duration: 200
		})
		.add({
			targets: '.startBtn',
			width: '150px',
			height: '150px',
			easing: 'easeInOutQuad',
			duration: 300
		})
		.add({
			targets: '.startBtn #franceMap',
			opacity: 1,
			easing: 'easeInOutQuad',
			duration: 200
		}, '-=200')
	}

	function franceMapAnim() {
		anime({
			targets: '.startBtn #franceMap #bg',
			opacity: 0,
			easing: 'easeInOutQuad',
			duration: 500,
			direction: 'alternate',
			loop: true
		});
		anime({
			targets: '.startBtn #franceMap #strokeB',
			strokeDashoffset: [anime.setDashoffset, 0],
			easing: 'linear',
			duration: 2000,
			delay: 0,
			loop: true
		});
		setTimeout(() => {
			anime({
				targets: '.startBtn #franceMap #strokeW',
				strokeDashoffset: [anime.setDashoffset, 0],
				easing: 'linear',
				duration: 2000,
				loop: true
			});
		}, 100)

		setTimeout(() => {
			anime({
				targets: '.startBtn #franceMap #strokeR',
				strokeDashoffset: [anime.setDashoffset, 0],
				easing: 'linear',
				duration: 2000,
				loop: true
			});
		}, 200)
	}

	function resultAnim(text, color, el){
		return new Promise<void>((resolve) => {
			setResultText(text)

			anime.timeline({
				duration: 3000,
			})
			.add({
				targets: '.startBtn #franceMap',
				opacity: 0,
				easing: 'easeInOutQuad',
				duration: 200
			})
			.add({
				targets: '.startBtn '+el,
				opacity: 1,
				easing: 'easeInOutQuad',
				duration: 200
			})
			.add({
				targets: '#resultText',
				color: color,
				easing: 'easeInOutQuad',
				duration: 0
			})
			.add({
				targets: '.startBtn',
				backgroundColor: color,
				easing: 'easeInOutQuad',
				duration: 200
			})
			.add({
				targets: '.startBtn',
				width: '45px',
				height: '45px',
				easing: 'easeInOutQuad',
				duration: 200
			})
			.add({
				targets: '#container',
				left: 0,
				translateX: ['-50%', '0%'],
				translateY: ['-50%', '-50%'],
				easing: 'easeInOutCubic',
				duration: 500
			})
			.add({
				targets: '#resultText',
				opacity: 1,
				easing: 'easeInOutQuad',
				duration: 300
			}, '-=300')
			.finished.then(() => resolve())
		})
	}

	function Start(){
		props.click();
		startAnim();
		franceMapAnim();
	}

	function Valid(){
		return new Promise((resolve) => {
			resultAnim("Entreprise trouvée !", colors.green[500], "#valid").then(resolve)
		})
	}

	function Error(){
		return new Promise((resolve) => {
			resultAnim("Erreur", colors.red[500], "#error").then(resolve)
		})
	}

	function Unknow(){
		return new Promise((resolve) => {
			resultAnim("Entreprise introuvable", colors.amber[500], "#unknow").then(resolve)
		})
	}

	useImperativeHandle(ref, () => ({
		Valid,
		Error,
		Unknow
	}));

	return (
		<div className="relative h-32">
			<div id="container" className="absolute -translate-x-1/2 -translate-y-1/2 left-1/2 top-1/2">
				<button className="rounded-full bg-dark text-white startBtn shrink-0" onClick={Start}>
					Lancer la vérification
					<svg id="franceMap" viewBox="0 0 512 512" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" xmlSpace="preserve">
						<g transform="matrix(0.0949084,0,0,-0.0949084,13.0337,498.973)">
							<path className="fill-sky-500 opacity-10" id="bg" d="M4967,3613C4977.06,3625.8 5006,3677 5030,3728C5064,3804 5071,3829 5067,3861C5055,3953 5007,3985 4867,3995C4739,4003 4618,4026 4560,4051C4535,4062 4490,4097 4458,4131C4369,4224 4305,4247 4031,4284C3897,4302 3865,4318 3828,4385C3787,4461 3763,4473 3645,4480C3499,4488 3499,4488 3401,4705C3347,4824 3289,4868 3152,4896C3028,4922 2984,4953 2936,5047C2904,5111 2822,5133 2715,5106C2641,5087 2598,5067 2555,5029C2478,4961 2462,4870 2495,4696C2507,4630 2509,4601 2501,4584C2482,4542 2411,4501 2295,4465C2099,4404 2002,4340 1935,4225C1890,4148 1871,4133 1808,4124C1756,4117 1640,4135 1613,4155C1597,4167 1597,4172 1609,4217C1632,4294 1634,4344 1615,4379C1594,4420 1545,4450 1497,4450C1449,4450 1224,4394 1197,4375C1137,4333 1122,4248 1165,4189C1220,4112 1240,4071 1254,4004C1270,3930 1295,3858 1331,3789C1372,3707 1339,3694 1185,3730C1087,3753 1037,3755 990,3738C958,3727 955,3728 931,3761C877,3834 805,3898 765,3909C682,3932 608,3916 551,3865C509,3827 505,3827 370,3875C309,3897 284,3901 234,3897C157,3891 99,3860 71,3810C44,3761 45,3727 76,3660C98,3612 101,3597 95,3543C83,3425 125,3340 232,3266C320,3206 413,3180 570,3171C763,3160 826,3130 874,3024C889,2993 922,2949 955,2917L1011,2863L1026,2756C1043,2622 1054,2581 1092,2505C1125,2440 1266,2324 1266,2324C1417.91,2195.12 1414.95,2040.71 1499,1890C1528,1838 1558,1779 1566,1760L1581,1725L1532,1773C1475,1829 1429,1842 1383,1815C1367,1805 1347,1788 1339,1776C1320,1747 1314,1506 1330,1428L1343,1369L1302,1334C1236,1278 1211,1214 1201,1074C1191,949 1182,913 1131,812C1075,701 1088,658 1208,540C1256,493 1340,407 1395,349C1476,264 1508,237 1565,209C1629,178 1642,175 1725,175C1812,175 1818,177 1920,224C2056,289 2104,294 2180,251C2277,195 2318,179 2397,165C2494,148 2487,151 2653,73C2827,-10 2885,-18 2970,27C3066,77 3120,185 3120,326L3120,399L3167,422C3193,435 3252,481 3299,526C3346,571 3395,612 3407,618C3440,636 3484,632 3576,604C3677,572 3756,574 3841,609C3876,624 3907,630 3922,627C3935,623 3979,595 4020,564C4156,461 4274,424 4412,441C4488,450 4574,479 4630,512C4692,549 4817,666 4898,764C5021,912 5057,1020 5010,1097C4987,1135 4950,1156 4878,1171C4766,1194 4744,1230 4754,1377C4761,1484 4753,1518 4716,1549C4685,1575 4696,1630 4745,1690C4815,1775 4818,1848 4755,1915C4714,1957 4717,1946 4719,2080C4722,2248 4682,2368 4609,2409C4557,2438 4504,2433 4449,2393C4358,2327 4346,2320 4327,2320C4310,2320 4308,2325 4313,2354C4320,2396 4349,2444 4455,2585C4554,2717 4574,2755 4588,2839C4600,2908 4627,2969 4650,2981C4658,2986 4690,2996 4721,3004C4835,3036 4903,3115 4923,3239C4929.88,3284.89 4863.45,3481.18 4967,3613Z"/>
							<path className="stroke" id="strokeR" d="M4967,3613C4977.06,3625.8 5006,3677 5030,3728C5064,3804 5071,3829 5067,3861C5055,3953 5007,3985 4867,3995C4739,4003 4618,4026 4560,4051C4535,4062 4490,4097 4458,4131C4369,4224 4305,4247 4031,4284C3897,4302 3865,4318 3828,4385C3787,4461 3763,4473 3645,4480C3499,4488 3499,4488 3401,4705C3347,4824 3289,4868 3152,4896C3028,4922 2984,4953 2936,5047C2904,5111 2822,5133 2715,5106C2641,5087 2598,5067 2555,5029C2478,4961 2462,4870 2495,4696C2507,4630 2509,4601 2501,4584C2482,4542 2411,4501 2295,4465C2099,4404 2002,4340 1935,4225C1890,4148 1871,4133 1808,4124C1756,4117 1640,4135 1613,4155C1597,4167 1597,4172 1609,4217C1632,4294 1634,4344 1615,4379C1594,4420 1545,4450 1497,4450C1449,4450 1224,4394 1197,4375C1137,4333 1122,4248 1165,4189C1220,4112 1240,4071 1254,4004C1270,3930 1295,3858 1331,3789C1372,3707 1339,3694 1185,3730C1087,3753 1037,3755 990,3738C958,3727 955,3728 931,3761C877,3834 805,3898 765,3909C682,3932 608,3916 551,3865C509,3827 505,3827 370,3875C309,3897 284,3901 234,3897C157,3891 99,3860 71,3810C44,3761 45,3727 76,3660C98,3612 101,3597 95,3543C83,3425 125,3340 232,3266C320,3206 413,3180 570,3171C763,3160 826,3130 874,3024C889,2993 922,2949 955,2917L1011,2863L1026,2756C1043,2622 1054,2581 1092,2505C1125,2440 1266,2324 1266,2324C1417.91,2195.12 1414.95,2040.71 1499,1890C1528,1838 1558,1779 1566,1760L1581,1725L1532,1773C1475,1829 1429,1842 1383,1815C1367,1805 1347,1788 1339,1776C1320,1747 1314,1506 1330,1428L1343,1369L1302,1334C1236,1278 1211,1214 1201,1074C1191,949 1182,913 1131,812C1075,701 1088,658 1208,540C1256,493 1340,407 1395,349C1476,264 1508,237 1565,209C1629,178 1642,175 1725,175C1812,175 1818,177 1920,224C2056,289 2104,294 2180,251C2277,195 2318,179 2397,165C2494,148 2487,151 2653,73C2827,-10 2885,-18 2970,27C3066,77 3120,185 3120,326L3120,399L3167,422C3193,435 3252,481 3299,526C3346,571 3395,612 3407,618C3440,636 3484,632 3576,604C3677,572 3756,574 3841,609C3876,624 3907,630 3922,627C3935,623 3979,595 4020,564C4156,461 4274,424 4412,441C4488,450 4574,479 4630,512C4692,549 4817,666 4898,764C5021,912 5057,1020 5010,1097C4987,1135 4950,1156 4878,1171C4766,1194 4744,1230 4754,1377C4761,1484 4753,1518 4716,1549C4685,1575 4696,1630 4745,1690C4815,1775 4818,1848 4755,1915C4714,1957 4717,1946 4719,2080C4722,2248 4682,2368 4609,2409C4557,2438 4504,2433 4449,2393C4358,2327 4346,2320 4327,2320C4310,2320 4308,2325 4313,2354C4320,2396 4349,2444 4455,2585C4554,2717 4574,2755 4588,2839C4600,2908 4627,2969 4650,2981C4658,2986 4690,2996 4721,3004C4835,3036 4903,3115 4923,3239C4929.88,3284.89 4863.45,3481.18 4967,3613Z"/>
							<path className="stroke" id="strokeB" d="M4967,3613C4977.06,3625.8 5006,3677 5030,3728C5064,3804 5071,3829 5067,3861C5055,3953 5007,3985 4867,3995C4739,4003 4618,4026 4560,4051C4535,4062 4490,4097 4458,4131C4369,4224 4305,4247 4031,4284C3897,4302 3865,4318 3828,4385C3787,4461 3763,4473 3645,4480C3499,4488 3499,4488 3401,4705C3347,4824 3289,4868 3152,4896C3028,4922 2984,4953 2936,5047C2904,5111 2822,5133 2715,5106C2641,5087 2598,5067 2555,5029C2478,4961 2462,4870 2495,4696C2507,4630 2509,4601 2501,4584C2482,4542 2411,4501 2295,4465C2099,4404 2002,4340 1935,4225C1890,4148 1871,4133 1808,4124C1756,4117 1640,4135 1613,4155C1597,4167 1597,4172 1609,4217C1632,4294 1634,4344 1615,4379C1594,4420 1545,4450 1497,4450C1449,4450 1224,4394 1197,4375C1137,4333 1122,4248 1165,4189C1220,4112 1240,4071 1254,4004C1270,3930 1295,3858 1331,3789C1372,3707 1339,3694 1185,3730C1087,3753 1037,3755 990,3738C958,3727 955,3728 931,3761C877,3834 805,3898 765,3909C682,3932 608,3916 551,3865C509,3827 505,3827 370,3875C309,3897 284,3901 234,3897C157,3891 99,3860 71,3810C44,3761 45,3727 76,3660C98,3612 101,3597 95,3543C83,3425 125,3340 232,3266C320,3206 413,3180 570,3171C763,3160 826,3130 874,3024C889,2993 922,2949 955,2917L1011,2863L1026,2756C1043,2622 1054,2581 1092,2505C1125,2440 1266,2324 1266,2324C1417.91,2195.12 1414.95,2040.71 1499,1890C1528,1838 1558,1779 1566,1760L1581,1725L1532,1773C1475,1829 1429,1842 1383,1815C1367,1805 1347,1788 1339,1776C1320,1747 1314,1506 1330,1428L1343,1369L1302,1334C1236,1278 1211,1214 1201,1074C1191,949 1182,913 1131,812C1075,701 1088,658 1208,540C1256,493 1340,407 1395,349C1476,264 1508,237 1565,209C1629,178 1642,175 1725,175C1812,175 1818,177 1920,224C2056,289 2104,294 2180,251C2277,195 2318,179 2397,165C2494,148 2487,151 2653,73C2827,-10 2885,-18 2970,27C3066,77 3120,185 3120,326L3120,399L3167,422C3193,435 3252,481 3299,526C3346,571 3395,612 3407,618C3440,636 3484,632 3576,604C3677,572 3756,574 3841,609C3876,624 3907,630 3922,627C3935,623 3979,595 4020,564C4156,461 4274,424 4412,441C4488,450 4574,479 4630,512C4692,549 4817,666 4898,764C5021,912 5057,1020 5010,1097C4987,1135 4950,1156 4878,1171C4766,1194 4744,1230 4754,1377C4761,1484 4753,1518 4716,1549C4685,1575 4696,1630 4745,1690C4815,1775 4818,1848 4755,1915C4714,1957 4717,1946 4719,2080C4722,2248 4682,2368 4609,2409C4557,2438 4504,2433 4449,2393C4358,2327 4346,2320 4327,2320C4310,2320 4308,2325 4313,2354C4320,2396 4349,2444 4455,2585C4554,2717 4574,2755 4588,2839C4600,2908 4627,2969 4650,2981C4658,2986 4690,2996 4721,3004C4835,3036 4903,3115 4923,3239C4929.88,3284.89 4863.45,3481.18 4967,3613Z"/>
							<path className="stroke" id="strokeW" d="M4967,3613C4977.06,3625.8 5006,3677 5030,3728C5064,3804 5071,3829 5067,3861C5055,3953 5007,3985 4867,3995C4739,4003 4618,4026 4560,4051C4535,4062 4490,4097 4458,4131C4369,4224 4305,4247 4031,4284C3897,4302 3865,4318 3828,4385C3787,4461 3763,4473 3645,4480C3499,4488 3499,4488 3401,4705C3347,4824 3289,4868 3152,4896C3028,4922 2984,4953 2936,5047C2904,5111 2822,5133 2715,5106C2641,5087 2598,5067 2555,5029C2478,4961 2462,4870 2495,4696C2507,4630 2509,4601 2501,4584C2482,4542 2411,4501 2295,4465C2099,4404 2002,4340 1935,4225C1890,4148 1871,4133 1808,4124C1756,4117 1640,4135 1613,4155C1597,4167 1597,4172 1609,4217C1632,4294 1634,4344 1615,4379C1594,4420 1545,4450 1497,4450C1449,4450 1224,4394 1197,4375C1137,4333 1122,4248 1165,4189C1220,4112 1240,4071 1254,4004C1270,3930 1295,3858 1331,3789C1372,3707 1339,3694 1185,3730C1087,3753 1037,3755 990,3738C958,3727 955,3728 931,3761C877,3834 805,3898 765,3909C682,3932 608,3916 551,3865C509,3827 505,3827 370,3875C309,3897 284,3901 234,3897C157,3891 99,3860 71,3810C44,3761 45,3727 76,3660C98,3612 101,3597 95,3543C83,3425 125,3340 232,3266C320,3206 413,3180 570,3171C763,3160 826,3130 874,3024C889,2993 922,2949 955,2917L1011,2863L1026,2756C1043,2622 1054,2581 1092,2505C1125,2440 1266,2324 1266,2324C1417.91,2195.12 1414.95,2040.71 1499,1890C1528,1838 1558,1779 1566,1760L1581,1725L1532,1773C1475,1829 1429,1842 1383,1815C1367,1805 1347,1788 1339,1776C1320,1747 1314,1506 1330,1428L1343,1369L1302,1334C1236,1278 1211,1214 1201,1074C1191,949 1182,913 1131,812C1075,701 1088,658 1208,540C1256,493 1340,407 1395,349C1476,264 1508,237 1565,209C1629,178 1642,175 1725,175C1812,175 1818,177 1920,224C2056,289 2104,294 2180,251C2277,195 2318,179 2397,165C2494,148 2487,151 2653,73C2827,-10 2885,-18 2970,27C3066,77 3120,185 3120,326L3120,399L3167,422C3193,435 3252,481 3299,526C3346,571 3395,612 3407,618C3440,636 3484,632 3576,604C3677,572 3756,574 3841,609C3876,624 3907,630 3922,627C3935,623 3979,595 4020,564C4156,461 4274,424 4412,441C4488,450 4574,479 4630,512C4692,549 4817,666 4898,764C5021,912 5057,1020 5010,1097C4987,1135 4950,1156 4878,1171C4766,1194 4744,1230 4754,1377C4761,1484 4753,1518 4716,1549C4685,1575 4696,1630 4745,1690C4815,1775 4818,1848 4755,1915C4714,1957 4717,1946 4719,2080C4722,2248 4682,2368 4609,2409C4557,2438 4504,2433 4449,2393C4358,2327 4346,2320 4327,2320C4310,2320 4308,2325 4313,2354C4320,2396 4349,2444 4455,2585C4554,2717 4574,2755 4588,2839C4600,2908 4627,2969 4650,2981C4658,2986 4690,2996 4721,3004C4835,3036 4903,3115 4923,3239C4929.88,3284.89 4863.45,3481.18 4967,3613Z"/>
						</g>
					</svg>
					<svg className="icons" id="valid" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
						<path className="fill-white" d="M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z"/>
					</svg>
					<svg className="icons" id="error" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
						<path className="fill-white" d="M175 175C184.4 165.7 199.6 165.7 208.1 175L255.1 222.1L303 175C312.4 165.7 327.6 165.7 336.1 175C346.3 184.4 346.3 199.6 336.1 208.1L289.9 255.1L336.1 303C346.3 312.4 346.3 327.6 336.1 336.1C327.6 346.3 312.4 346.3 303 336.1L255.1 289.9L208.1 336.1C199.6 346.3 184.4 346.3 175 336.1C165.7 327.6 165.7 312.4 175 303L222.1 255.1L175 208.1C165.7 199.6 165.7 184.4 175 175V175zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z"/>
					</svg>
					<svg className="icons" id="unknow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
						<path className="fill-white" d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM256 464c-114.7 0-208-93.31-208-208S141.3 48 256 48s208 93.31 208 208S370.7 464 256 464zM256 336c-18 0-32 14-32 32s13.1 32 32 32c17.1 0 32-14 32-32S273.1 336 256 336zM289.1 128h-51.1C199 128 168 159 168 198c0 13 11 24 24 24s24-11 24-24C216 186 225.1 176 237.1 176h51.1C301.1 176 312 186 312 198c0 8-4 14.1-11 18.1L244 251C236 256 232 264 232 272V288c0 13 11 24 24 24S280 301 280 288V286l45.1-28c21-13 34-36 34-60C360 159 329 128 289.1 128z"/>
					</svg>
				</button>
				<span id="resultText" className="absolute text-2xl font-extrabold whitespace-nowrap left-14 top-1/2 -translate-y-1/2">{resultText}</span>
			</div>
		</div>
	)
});

export default StartButton
